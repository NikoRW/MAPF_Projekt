%Fordidden are vertex and swapping conflicts


timelimit(horizon).
time(0..T) :- timelimit(T).
#minimize{T : timelimit(T)}.

%add slopes for every vertex to formulate general rule for agents location
edge(X,X) :- vertex(X)
%initialize agent location
location(A,X,0) :- start(A,X), time(0).
%since slopes were added this rule covers all possible actions an agent can take
{ location(A,X,T) : edge(X',X) }1 :- location(A,X',T-1), time(T).


%remove solutions with vertex conflicts
:- location(A,X,T), location(A',X,T), A != A'.

%remove solutions with edge conflicts
:- location(A,X,T), location(A',X',T), A != A', location(A,X',T+1), location(A',X,T+1). 

%remove solutions where not every agent is at its goal node
:- not location(A,X,horizon), goal(A,X).
